{"version":3,"file":"static/js/815.1a5e0034.chunk.js","mappings":"+OAYA,MAiDA,GAAeA,EAAAA,EAAAA,KAjDKC,KAClB,MAAM,YAAEC,IAAgBC,EAAAA,EAAAA,MAClBC,EAASF,EAAYG,cAS3B,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,QAAQ,WAAWC,GAAI,CAAEC,SAAU,IAAKC,aAAc,GAAIC,SAAA,EAC9DN,EAAAA,EAAAA,MAACO,EAAAA,EAAW,CAACJ,GAAI,CAAEK,GAAI,GAAIF,SAAA,EACzBG,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,SAASR,GAAI,CAAES,SAAU,IAAKN,SAAC,mBAGlDR,IACCW,EAAAA,EAAAA,KAACC,EAAAA,EAAU,CAACC,QAAQ,SAASR,GAAI,CAAES,SAAU,GAAIC,MAAO,QAASP,SAC9D,uBAIPN,EAAAA,EAAAA,MAACc,EAAAA,EAAW,CAACX,GAAI,CAAEY,GAAI,EAAGC,GAAI,EAAGR,GAAI,GAAIF,SAAA,EACrCR,IACAW,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACLC,KAAK,QACLhB,QAAQ,YACRC,GAAI,CAAEgB,gBAAiB,QAASd,aAAc,GAC9Ce,QA1BMC,KACdC,QAAQC,IAAI,WACZ3B,EAAY4B,YAAY,EAwBClB,SAClB,eAIFR,IACCW,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CACLC,KAAK,QACLhB,QAAQ,YACRC,GAAI,CAAEgB,gBAAiB,QAASd,aAAc,GAC9Ce,QAhCMK,KACdH,QAAQC,IAAI,WACZ3B,EAAY6B,SAAS,EA8BInB,SAClB,iBAKA,G,kMC3CI,MAAMoB,EAmBnBC,WAAAA,CAAYC,GAAY,KAFxB9B,QAAS,GAGP+B,EAAAA,EAAAA,IAAmBC,KAAM,CAAEF,WAAW,IACtCE,KAAKF,UAAYA,CAEnB,CAEAJ,UAAAA,GACEM,KAAKC,UAAY,IAAIC,EAAAA,UACrBF,KAAKG,UAAY,IAAIC,EAAAA,UACrBJ,KAAKK,YAAc,IAAIC,EAAAA,YACvBN,KAAKO,aAAe,IAAIC,EAAAA,aACxBR,KAAKS,UAAY,IAAIC,EAAAA,UACrBV,KAAKW,UAAY,IAAIC,EAAAA,UACrBZ,KAAKa,UAAY,IAAIC,EAAAA,UACrBd,KAAKe,UAAY,IAAIC,EAAAA,UACrBhB,KAAKiB,eAAiB,IAAIC,EAAAA,eAC1BlB,KAAKmB,UAAY,IAAIC,EAAAA,UACrBpB,KAAKqB,UAAY,IAAIC,EAAAA,UACrBtB,KAAKuB,cAAgB,IAAIC,EAAAA,cACzBxB,KAAKyB,aAAe,IAAIC,EAAAA,aACxB1B,KAAKhC,QAAS,CAChB,CAEA,iBAAIC,GACF,OAAO+B,KAAKhC,MACd,CAEA2D,SAAAA,CAAUC,GACR,OAAQA,GACN,IAAK,MACH,OAAO5B,KAAKC,UAEd,IAAK,MACH,OAAOD,KAAKG,UAEd,IAAK,QACH,OAAOH,KAAKK,YAEd,IAAK,SACH,OAAOL,KAAKO,aAEd,IAAK,MACH,OAAOP,KAAKS,UAEd,IAAK,MACH,OAAOT,KAAKW,UAEd,IAAK,MACH,OAAOX,KAAKa,UAEd,IAAK,MACH,OAAOb,KAAKe,UAEd,IAAK,QACH,OAAOf,KAAKiB,eAEd,IAAK,MACH,OAAOjB,KAAKmB,UAEd,IAAK,MACH,OAAOnB,KAAKqB,UAEd,IAAK,UACH,OAAOrB,KAAKuB,cAEd,IAAK,SACH,OAAOvB,KAAKyB,aAEd,QACE,MAAM,IAAII,MAAM,kBAGtB,CAEAlC,OAAAA,GACEK,KAAKC,eAAY6B,EACjB9B,KAAKG,eAAY2B,EACjB9B,KAAKhC,QAAS,CAChB,ECrGK,MAAM+D,GAAeC,EAAAA,EAAAA,eAAc,IANnC,MACLnC,WAAAA,GACEG,KAAKlC,YAAc,IAAI8B,EAAYI,KACrC,IAKWjC,EAAWA,KACfkE,EAAAA,EAAAA,YAAWF,E","sources":["features/initSDK.js","stores/walletStore.js","stores/index.js"],"sourcesContent":["import { observer } from \"mobx-react-lite\";\n\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Typography,\n} from \"@mui/material\";\n\nimport { useStore } from \"../stores\";\n\nconst InitSDKCard = () => {\n  const { walletStore } = useStore();\n  const isInit = walletStore.isInitialized;\n  const initSDK = () => {\n    console.log(\"initSDK\");\n    walletStore.initialize();\n  };\n  const dispose = () => {\n    console.log(\"dispose\");\n    walletStore.dispose();\n  };\n  return (\n    <Card variant=\"outlined\" sx={{ minWidth: 275, borderRadius: 5 }}>\n      <CardContent sx={{ pb: 1 }}>\n        <Typography display=\"inline\" sx={{ fontSize: 26 }}>\n          OKX Wallet SDK\n        </Typography>\n        {isInit && (\n          <Typography display=\"inline\" sx={{ fontSize: 14, color: \"blue\" }}>\n            {\" (Initialized)\"}\n          </Typography>\n        )}\n      </CardContent>\n      <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n        {!isInit && (\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            sx={{ backgroundColor: \"black\", borderRadius: 2 }}\n            onClick={initSDK}\n          >\n            Initialize\n          </Button>\n        )}\n        {isInit && (\n          <Button\n            size=\"small\"\n            variant=\"contained\"\n            sx={{ backgroundColor: \"black\", borderRadius: 2 }}\n            onClick={dispose}\n          >\n            Dispose\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default observer(InitSDKCard);\n","import { makeAutoObservable } from \"mobx\";\n\nimport { BtcWallet } from \"@okxweb3/coin-bitcoin\";\nimport { EthWallet } from \"@okxweb3/coin-ethereum\";\nimport { AptosWallet } from \"@okxweb3/coin-aptos\";\nimport { CosmosWallet } from \"@okxweb3/coin-cosmos\";\nimport { EosWallet, WaxWallet } from \"@okxweb3/coin-eos\";\nimport { SolWallet } from \"@okxweb3/coin-solana\";\nimport { StxWallet } from \"@okxweb3/coin-stacks\";\nimport { StarknetWallet } from \"@okxweb3/coin-starknet\";\nimport { SuiWallet } from \"@okxweb3/coin-sui\";\nimport { TrxWallet } from \"@okxweb3/coin-tron\";\nimport { ZkspaceWallet, ZksyncWallet } from \"@okxweb3/coin-zkspace\";\n\nexport default class WalletStore {\n  rootStore;\n\n  btcWallet;\n  ethWallet;\n  aptosWallet;\n  cosmosWallet;\n  eosWallet;\n  waxWallet;\n  solWallet;\n  stxWallet;\n  starknetWallet;\n  suiWallet;\n  trxWallet;\n  zkSpaceWallet;\n  zkSyncWallet;\n\n  isInit = false;\n\n  constructor(rootStore) {\n    makeAutoObservable(this, { rootStore: false });\n    this.rootStore = rootStore;\n    // this.initialize();\n  }\n\n  initialize() {\n    this.btcWallet = new BtcWallet();\n    this.ethWallet = new EthWallet();\n    this.aptosWallet = new AptosWallet();\n    this.cosmosWallet = new CosmosWallet();\n    this.eosWallet = new EosWallet();\n    this.waxWallet = new WaxWallet();\n    this.solWallet = new SolWallet();\n    this.stxWallet = new StxWallet();\n    this.starknetWallet = new StarknetWallet();\n    this.suiWallet = new SuiWallet();\n    this.trxWallet = new TrxWallet();\n    this.zkSpaceWallet = new ZkspaceWallet();\n    this.zkSyncWallet = new ZksyncWallet();\n    this.isInit = true;\n  }\n\n  get isInitialized() {\n    return this.isInit;\n  }\n\n  getWallet(coinType) {\n    switch (coinType) {\n      case \"BTC\": {\n        return this.btcWallet;\n      }\n      case \"ETH\": {\n        return this.ethWallet;\n      }\n      case \"APTOS\": {\n        return this.aptosWallet;\n      }\n      case \"COSMOS\": {\n        return this.cosmosWallet;\n      }\n      case \"EOS\": {\n        return this.eosWallet;\n      }\n      case \"WAX\": {\n        return this.waxWallet;\n      }\n      case \"SOL\": {\n        return this.solWallet;\n      }\n      case \"STX\": {\n        return this.stxWallet;\n      }\n      case \"STARK\": {\n        return this.starknetWallet;\n      }\n      case \"SUI\": {\n        return this.suiWallet;\n      }\n      case \"TRX\": {\n        return this.trxWallet;\n      }\n      case \"ZKSPACE\": {\n        return this.zkSpaceWallet;\n      }\n      case \"ZKSYNC\": {\n        return this.zkSyncWallet;\n      }\n      default: {\n        throw new Error(\"No such wallet\");\n      }\n    }\n  }\n\n  dispose() {\n    this.btcWallet = undefined;\n    this.ethWallet = undefined;\n    this.isInit = false;\n  }\n}\n","import { createContext, useContext } from \"react\";\n\nimport WalletStore from \"./walletStore.js\";\n\nexport class RootStore {\n  constructor() {\n    this.walletStore = new WalletStore(this);\n  }\n}\n\nexport const StoreContext = createContext(new RootStore());\n\nexport const useStore = () => {\n  return useContext(StoreContext);\n};\n"],"names":["observer","InitSDKCard","walletStore","useStore","isInit","isInitialized","_jsxs","Card","variant","sx","minWidth","borderRadius","children","CardContent","pb","_jsx","Typography","display","fontSize","color","CardActions","pl","pr","Button","size","backgroundColor","onClick","initSDK","console","log","initialize","dispose","WalletStore","constructor","rootStore","makeAutoObservable","this","btcWallet","BtcWallet","ethWallet","EthWallet","aptosWallet","AptosWallet","cosmosWallet","CosmosWallet","eosWallet","EosWallet","waxWallet","WaxWallet","solWallet","SolWallet","stxWallet","StxWallet","starknetWallet","StarknetWallet","suiWallet","SuiWallet","trxWallet","TrxWallet","zkSpaceWallet","ZkspaceWallet","zkSyncWallet","ZksyncWallet","getWallet","coinType","Error","undefined","StoreContext","createContext","useContext"],"sourceRoot":""}