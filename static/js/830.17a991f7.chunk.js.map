{"version":3,"file":"static/js/830.17a991f7.chunk.js","mappings":"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","sources":["constants/coinTypeOptions.js","features/generateMnenomic.js","stores/walletStore.js","stores/index.js"],"sourcesContent":["const coinTypeOptions = [\n  { label: \"BTC - Bitcoin\", value: \"BTC\" },\n  { label: \"ETH - Ethereum\", value: \"ETH\" },\n  { label: \"APTOS - Aptos\", value: \"APTOS\" },\n  { label: \"ATOM - Cosmos\", value: \"ATOM\" },\n  { label: \"EOS - EOS\", value: \"EOS\" },\n  { label: \"WAX - EOS\", value: \"WAX\" },\n  { label: \"SOL - Solana\", value: \"SOL\" },\n  { label: \"STX - Stacks\", value: \"STX\" },\n  { label: \"STARK - Starknet\", value: \"STARK\" },\n  { label: \"SUI - SUI\", value: \"SUI\" },\n  { label: \"TRX - Tron\", value: \"TRX\" },\n  { label: \"ZKSPACE - Zkspace\", value: \"ZKSPACE\" },\n  { label: \"ZKSYNC - Zkspace\", value: \"ZKSYNC\" },\n];\n\nexport { coinTypeOptions };\n","import { useState, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport {\n  Card,\n  CardContent,\n  CardActions,\n  Button,\n  Typography,\n  Alert,\n  AlertTitle,\n  Autocomplete,\n  TextField,\n  Divider,\n} from \"@mui/material\";\n\nimport { bip39 } from \"@okxweb3/crypto-lib\";\n\nimport { coinTypeOptions } from \"../constants/coinTypeOptions\";\nimport { useStore } from \"../stores\";\n\nconst GenerateMnenomicCard = () => {\n  const [coinType, setCoinType] = useState();\n  const [mnenomic, setMnenomic] = useState();\n  const [privateKeys, setPrivateKeys] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const { walletStore } = useStore();\n  const isInit = walletStore.isInitialized;\n\n  useEffect(() => {\n    setCoinType();\n    setMnenomic();\n    setPrivateKeys([]);\n    setErrorMessage(\"\");\n  }, [isInit]);\n\n  const genMnenomic = async () => {\n    try {\n      const result = await bip39.generateMnemonic();\n      setMnenomic(result);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  const generatePrivateKey = async () => {\n    console.log(coinType);\n    if (!coinType) {\n      setErrorMessage(\"Please select a coin type!\");\n      return;\n    }\n    try {\n      setErrorMessage(\"\");\n      let wallet = walletStore.getWallet(coinType);\n      if (wallet) {\n        const derivedPath = await wallet.getDerivedPath({ index: 0 });\n        const privateKey = await wallet.getDerivedPrivateKey({\n          mnenomic,\n          hdPath: derivedPath,\n        });\n        const address = await wallet.getNewAddress({ privateKey });\n        const object = {\n          network: coinType,\n          derivedPath,\n          privateKey,\n          address: address.address,\n        };\n        setPrivateKeys([object, ...privateKeys]);\n      }\n    } catch (err) {\n      console.error(err);\n      setErrorMessage(err.toString());\n    }\n  };\n  return (\n    <Card variant=\"outlined\" sx={{ minWidth: 275, borderRadius: 5 }}>\n      <CardContent sx={{ pb: 1 }}>\n        <Typography sx={{ fontSize: 26 }}>Generate Mnenomic</Typography>\n      </CardContent>\n      <Divider flexItem />\n      <CardContent sx={{ pb: 0 }}>\n        <Typography sx={{ fontSize: 20 }}>Mnenomic</Typography>\n      </CardContent>\n      <CardContent\n        sx={{ py: 1, mx: 2, borderRadius: 2, backgroundColor: \"#f7f7f7\" }}\n      >\n        <Typography sx={{ minHeight: 24, fontSize: 20 }}>{mnenomic}</Typography>\n      </CardContent>\n      <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          sx={{ backgroundColor: \"black\", borderRadius: 2 }}\n          onClick={genMnenomic}\n          disabled={!isInit || !!mnenomic}\n        >\n          Generate Mnenomic\n        </Button>\n      </CardActions>\n      <CardContent sx={{ pb: 0 }}>\n        <Typography sx={{ fontSize: 20 }}>Coin Type</Typography>\n      </CardContent>\n      <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n        <Autocomplete\n          options={coinTypeOptions}\n          sx={{ width: 288, p: 1 }}\n          renderInput={(params) => <TextField {...params} label=\"Coin Type\" />}\n          onChange={(_, value) => setCoinType(value?.value)}\n          isOptionEqualToValue={(option, value) => option.value === value.value}\n          key={!isInit}\n          disabled={!isInit}\n        />\n        <Button\n          size=\"small\"\n          variant=\"contained\"\n          sx={{ backgroundColor: \"black\", borderRadius: 2 }}\n          onClick={generatePrivateKey}\n          disabled={!isInit || !mnenomic || !coinType}\n        >\n          Generate Address\n        </Button>\n      </CardActions>\n      {errorMessage && (\n        <Alert severity=\"error\">\n          <AlertTitle>Failure</AlertTitle>\n          {errorMessage}\n        </Alert>\n      )}\n      {privateKeys &&\n        privateKeys.map((object, index) => {\n          return object ? (\n            <Alert severity=\"success\" key={index}>\n              <AlertTitle>Success</AlertTitle>\n              <strong>{`Chain: ${object.network}`}</strong>\n              <br />\n              <strong>{`Derivation Path: ${object.derivedPath}`}</strong>\n              <br />\n              <strong>{`Private Key: ${object.privateKey}`}</strong>\n              <br />\n              <strong>{`Address: ${object.address}`}</strong>\n            </Alert>\n          ) : null;\n        })}\n    </Card>\n  );\n};\n\nexport default observer(GenerateMnenomicCard);\n","import { makeAutoObservable } from \"mobx\";\n\nimport { BtcWallet } from \"@okxweb3/coin-bitcoin\";\nimport { EthWallet } from \"@okxweb3/coin-ethereum\";\nimport { AptosWallet } from \"@okxweb3/coin-aptos\";\nimport { AtomWallet } from \"@okxweb3/coin-cosmos\";\nimport { EosWallet, WaxWallet } from \"@okxweb3/coin-eos\";\nimport { SolWallet } from \"@okxweb3/coin-solana\";\nimport { StxWallet } from \"@okxweb3/coin-stacks\";\nimport { StarknetWallet } from \"@okxweb3/coin-starknet\";\nimport { SuiWallet } from \"@okxweb3/coin-sui\";\nimport { TrxWallet } from \"@okxweb3/coin-tron\";\nimport { ZkspaceWallet, ZksyncWallet } from \"@okxweb3/coin-zkspace\";\n\nexport default class WalletStore {\n  rootStore;\n  isInit = false;\n\n  constructor(rootStore) {\n    makeAutoObservable(this, { rootStore: false });\n    this.rootStore = rootStore;\n    // this.initialize();\n  }\n\n  initialize() {\n    this.btcWallet = new BtcWallet();\n    this.ethWallet = new EthWallet();\n    this.aptosWallet = new AptosWallet();\n    this.atomWallet = new AtomWallet();\n    this.eosWallet = new EosWallet();\n    this.waxWallet = new WaxWallet();\n    this.solWallet = new SolWallet();\n    this.stxWallet = new StxWallet();\n    this.starknetWallet = new StarknetWallet();\n    this.suiWallet = new SuiWallet();\n    this.trxWallet = new TrxWallet();\n    this.zkSpaceWallet = new ZkspaceWallet();\n    this.zkSyncWallet = new ZksyncWallet();\n    this.isInit = true;\n  }\n\n  get isInitialized() {\n    return this.isInit;\n  }\n\n  getWallet(coinType) {\n    switch (coinType) {\n      case \"BTC\": {\n        return this.btcWallet;\n      }\n      case \"ETH\": {\n        return this.ethWallet;\n      }\n      case \"APTOS\": {\n        return this.aptosWallet;\n      }\n      case \"ATOM\": {\n        return this.atomWallet;\n      }\n      case \"EOS\": {\n        return this.eosWallet;\n      }\n      case \"WAX\": {\n        return this.waxWallet;\n      }\n      case \"SOL\": {\n        return this.solWallet;\n      }\n      case \"STX\": {\n        return this.stxWallet;\n      }\n      case \"STARK\": {\n        return this.starknetWallet;\n      }\n      case \"SUI\": {\n        return this.suiWallet;\n      }\n      case \"TRX\": {\n        return this.trxWallet;\n      }\n      case \"ZKSPACE\": {\n        return this.zkSpaceWallet;\n      }\n      case \"ZKSYNC\": {\n        return this.zkSyncWallet;\n      }\n      default: {\n        throw new Error(\"No such wallet\");\n      }\n    }\n  }\n\n  dispose() {\n    this.btcWallet = undefined;\n    this.ethWallet = undefined;\n    this.isInit = false;\n  }\n}\n","import { createContext, useContext } from \"react\";\n\nimport WalletStore from \"./walletStore.js\";\n\nexport class RootStore {\n  constructor() {\n    this.walletStore = new WalletStore(this);\n  }\n}\n\nexport const StoreContext = createContext(new RootStore());\n\nexport const useStore = () => {\n  return useContext(StoreContext);\n};\n"],"names":["coinTypeOptions","label","value","observer","GenerateMnenomicCard","coinType","setCoinType","useState","mnenomic","setMnenomic","privateKeys","setPrivateKeys","errorMessage","setErrorMessage","walletStore","useStore","isInit","isInitialized","useEffect","_jsxs","Card","variant","sx","minWidth","borderRadius","children","_jsx","CardContent","pb","Typography","fontSize","Divider","flexItem","py","mx","backgroundColor","minHeight","CardActions","pl","pr","Button","size","onClick","async","result","bip39","generateMnemonic","err","console","error","disabled","Autocomplete","options","width","p","renderInput","params","TextField","onChange","_","isOptionEqualToValue","option","log","wallet","getWallet","derivedPath","getDerivedPath","index","privateKey","getDerivedPrivateKey","hdPath","address","getNewAddress","object","network","toString","Alert","severity","AlertTitle","map","WalletStore","constructor","rootStore","makeAutoObservable","this","initialize","btcWallet","BtcWallet","ethWallet","EthWallet","aptosWallet","AptosWallet","atomWallet","AtomWallet","eosWallet","EosWallet","waxWallet","WaxWallet","solWallet","SolWallet","stxWallet","StxWallet","starknetWallet","StarknetWallet","suiWallet","SuiWallet","trxWallet","TrxWallet","zkSpaceWallet","ZkspaceWallet","zkSyncWallet","ZksyncWallet","Error","dispose","undefined","StoreContext","createContext","useContext"],"sourceRoot":""}