{"version":3,"file":"static/js/815.b37737d4.chunk.js","mappings":"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","sources":["components/CardActionButton.js","components/DemoDialog.js","features/initSDK.js","stores/walletStore.js","stores/index.js"],"sourcesContent":["import { Button } from \"@mui/material\";\n\nconst CardActionButton = ({ buttonText, handleClick, disabled = false }) => {\n  return (\n    <Button\n      size=\"small\"\n      variant=\"contained\"\n      sx={{ backgroundColor: \"black\", borderRadius: 2 }}\n      onClick={handleClick}\n      disabled={disabled}\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nexport { CardActionButton };\n","import {\n  Button,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n} from \"@mui/material\";\n\nconst DemoDialog = ({\n  title,\n  content,\n  closeButtonText = \"No\",\n  confirmButtonText = \"Yes\",\n  showDialog = false,\n  handleClose,\n  handleConfirm,\n}) => {\n  return (\n    <Dialog\n      open={showDialog}\n      onClose={handleClose || handleConfirm}\n      aria-labelledby=\"alert-dialog-title\"\n      aria-describedby=\"alert-dialog-description\"\n    >\n      <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText id=\"alert-dialog-description\">\n          {content}\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        {handleClose && (\n          <Button onClick={handleClose}>{closeButtonText}</Button>\n        )}\n        <Button onClick={handleConfirm} autoFocus>\n          {confirmButtonText}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n};\n\nexport { DemoDialog };\n","import { useState, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\n\nimport { Card, CardContent, CardActions, Typography } from \"@mui/material\";\n\nimport { CardActionButton } from \"../components/CardActionButton\";\nimport { DemoDialog } from \"../components/DemoDialog\";\nimport { useStore } from \"../stores\";\n\n// card per feature\nconst InitSDKCard = () => {\n  // local UI state\n  const [showDialog, setShowDialog] = useState(false);\n\n  // mobx store that link up with sdk wallets\n  const { walletStore } = useStore();\n  const isInit = walletStore.isInitialized;\n\n  // local UI state cleanup when sdk re-initialized\n  useEffect(() => {\n    setShowDialog(false);\n  }, [isInit]);\n\n  // event handler\n  const confirmDialog = () => {\n    walletStore.dispose();\n    setShowDialog(false);\n  };\n  const closeDialog = () => {\n    setShowDialog(false);\n  };\n\n  // feature logic\n  const initSDK = () => {\n    walletStore.initialize();\n  };\n  const dispose = () => {\n    setShowDialog(true);\n  };\n\n  // render logic\n  return (\n    <>\n      <Card variant=\"outlined\" sx={{ minWidth: 275, borderRadius: 5 }}>\n        <CardContent sx={{ pb: 1 }}>\n          <Typography display=\"inline\" sx={{ fontSize: 26 }}>\n            OKX Wallet SDK\n          </Typography>\n          {isInit && (\n            <Typography display=\"inline\" sx={{ fontSize: 14, color: \"blue\" }}>\n              {\" (Initialized)\"}\n            </Typography>\n          )}\n        </CardContent>\n        <CardActions sx={{ pl: 2, pr: 2, pb: 2 }}>\n          {!isInit ? (\n            <CardActionButton buttonText=\"Initialize\" handleClick={initSDK} />\n          ) : (\n            <CardActionButton buttonText=\"Dispose\" handleClick={dispose} />\n          )}\n        </CardActions>\n      </Card>\n      <DemoDialog\n        title={\"Are you sure?\"}\n        content={\"The Mnenomics and Private Keys generated will be lost!\"}\n        showDialog={showDialog}\n        handleClose={closeDialog}\n        handleConfirm={confirmDialog}\n      />\n    </>\n  );\n};\n\nexport default observer(InitSDKCard);\n","import { makeAutoObservable } from \"mobx\";\n\nimport { BtcWallet, TBtcWallet } from \"@okxweb3/coin-bitcoin\";\nimport { EthWallet } from \"@okxweb3/coin-ethereum\";\nimport { AptosWallet } from \"@okxweb3/coin-aptos\";\nimport { AtomWallet } from \"@okxweb3/coin-cosmos\";\nimport { EosWallet } from \"@okxweb3/coin-eos\";\nimport { SolWallet } from \"@okxweb3/coin-solana\";\nimport { StxWallet } from \"@okxweb3/coin-stacks\";\nimport { StarknetWallet } from \"@okxweb3/coin-starknet\";\nimport { SuiWallet } from \"@okxweb3/coin-sui\";\nimport { TrxWallet } from \"@okxweb3/coin-tron\";\nimport { ZkspaceWallet, ZksyncWallet } from \"@okxweb3/coin-zkspace\";\n\nexport default class WalletStore {\n  rootStore;\n  isInit = false;\n\n  constructor(rootStore) {\n    makeAutoObservable(this, { rootStore: false });\n    this.rootStore = rootStore;\n    // this.initialize();\n  }\n\n  initialize() {\n    this.btcWallet = new BtcWallet();\n    this.tbtcWallet = new TBtcWallet();\n    this.ethWallet = new EthWallet();\n    this.goerliWallet = new EthWallet();\n    this.oktcWallet = new EthWallet();\n    this.aptosWallet = new AptosWallet();\n    this.atomWallet = new AtomWallet();\n    this.eosWallet = new EosWallet();\n    this.solWallet = new SolWallet();\n    this.stxWallet = new StxWallet();\n    this.starknetWallet = new StarknetWallet();\n    this.suiWallet = new SuiWallet();\n    this.trxWallet = new TrxWallet();\n    this.zkSpaceWallet = new ZkspaceWallet();\n    this.zkSyncWallet = new ZksyncWallet();\n    this.isInit = true;\n  }\n\n  get isInitialized() {\n    return this.isInit;\n  }\n\n  getWallet(coinType) {\n    switch (coinType) {\n      case \"BTC\": {\n        return this.btcWallet;\n      }\n      case \"TBTC\": {\n        return this.tbtcWallet;\n      }\n      case \"ETH\": {\n        return this.ethWallet;\n      }\n      case \"GOERLI\": {\n        return this.goerliWallet;\n      }\n      case \"OKTC\": {\n        return this.oktcWallet;\n      }\n      case \"APTOS\": {\n        return this.aptosWallet;\n      }\n      case \"ATOM\": {\n        return this.atomWallet;\n      }\n      case \"EOS\": {\n        return this.eosWallet;\n      }\n      case \"SOL\": {\n        return this.solWallet;\n      }\n      case \"STX\": {\n        return this.stxWallet;\n      }\n      case \"STARK\": {\n        return this.starknetWallet;\n      }\n      case \"SUI\": {\n        return this.suiWallet;\n      }\n      case \"TRX\": {\n        return this.trxWallet;\n      }\n      case \"ZKSPACE\": {\n        return this.zkSpaceWallet;\n      }\n      case \"ZKSYNC\": {\n        return this.zkSyncWallet;\n      }\n      default: {\n        throw new Error(\"No such wallet\");\n      }\n    }\n  }\n\n  dispose() {\n    this.btcWallet = undefined;\n    this.ethWallet = undefined;\n    this.isInit = false;\n  }\n}\n","import { createContext, useContext } from \"react\";\n\nimport WalletStore from \"./walletStore.js\";\n\nexport class RootStore {\n  constructor() {\n    this.walletStore = new WalletStore(this);\n  }\n}\n\nexport const StoreContext = createContext(new RootStore());\n\nexport const useStore = () => {\n  return useContext(StoreContext);\n};\n"],"names":["CardActionButton","_ref","buttonText","handleClick","disabled","_jsx","Button","size","variant","sx","backgroundColor","borderRadius","onClick","children","DemoDialog","title","content","closeButtonText","confirmButtonText","showDialog","handleClose","handleConfirm","_jsxs","Dialog","open","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","autoFocus","observer","InitSDKCard","setShowDialog","useState","walletStore","useStore","isInit","isInitialized","useEffect","_Fragment","Card","minWidth","CardContent","pb","Typography","display","fontSize","color","CardActions","pl","pr","dispose","initSDK","initialize","closeDialog","confirmDialog","WalletStore","constructor","rootStore","makeAutoObservable","this","btcWallet","BtcWallet","tbtcWallet","TBtcWallet","ethWallet","EthWallet","goerliWallet","oktcWallet","aptosWallet","AptosWallet","atomWallet","AtomWallet","eosWallet","EosWallet","solWallet","SolWallet","stxWallet","StxWallet","starknetWallet","StarknetWallet","suiWallet","SuiWallet","trxWallet","TrxWallet","zkSpaceWallet","ZkspaceWallet","zkSyncWallet","ZksyncWallet","getWallet","coinType","Error","undefined","StoreContext","createContext","useContext"],"sourceRoot":""}